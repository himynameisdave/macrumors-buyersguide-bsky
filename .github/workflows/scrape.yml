name: Scrape & skeet

permissions:
  contents: write

on:
  push:
  workflow_dispatch:
  schedule:
    # Run at 5:04am PST
    - cron: '4 13 * * *'
    # Run at 11:11am PST
    - cron: '11 19 * * *'
    # Run at 5:04pm PST
    - cron: '4 1 * * *'
    # Run at 11:11pm PST
    - cron: '11 7 * * *'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
      - name: Check out this repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.12.1

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Note that this will also check if there are changes AND skeet them to Bsky
      - name: Build and run
        run: pnpm start
        env:
          BLUESKY_USERNAME: ${{ secrets.BLUESKY_USERNAME }}
          BLUESKY_PASSWORD: ${{ secrets.BLUESKY_PASSWORD }}

      # At this point, we may have already done the skeeting part, this just ensures that we update the local data
      - name: Commit and push if it changed
        run: |-
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          timestamp=$(date -u)
          git commit -m "ðŸ“± Latest data: ${timestamp}" || exit 0
          git pull --rebase origin main
          git push
